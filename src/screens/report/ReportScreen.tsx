import { useNavigation } from '@react-navigation/native';
import { NativeStackNavigationProp } from '@react-navigation/native-stack';
import { typography } from '@theme';
import React from 'react';
import { StyleProp, StyleSheet, Text, TextStyle, View } from 'react-native';
import { responsiveWidth } from 'react-native-responsive-dimensions';
import BriefcaseSvg from 'src/assets/svg/report/BriefcaseSvg';
import CalenderBlankSvg from 'src/assets/svg/report/CalenderBlankSvg';
import CalenderCheckSvg from 'src/assets/svg/report/CalenderCheckSvg';
import CheckSquareSvg from 'src/assets/svg/report/CheckSquareSvg';
import EmployeeSvg from 'src/assets/svg/report/EmployeeSvg';
import UserSvg from 'src/assets/svg/report/UserSvg';
import ScreenWrapper from 'src/components/containers/ScreenWrapper';
import WorkspaceHeader from 'src/components/dashboard/WorkspaceHeader';
import ReportCard from 'src/components/report/ReportCard';
import { RootStackParamList } from 'src/interfaces/navigation';
import { useAppSelector } from 'src/store/hooks';
import { colors } from 'src/theme/colors';
import commonStyles from 'src/theme/commonStyles';

export default function ReportScreen() {
  const navigation = useNavigation<NativeStackNavigationProp<RootStackParamList>>();
  const { isDarkTheme } = useAppSelector(state => state.app);
  return (
    <ScreenWrapper>
      <WorkspaceHeader />
      <View style={styles.dayStartBtnContainer}>
        <Text style={customTextStyles.startLeftText(isDarkTheme)}>All Reports</Text>
      </View>
      <View style={styles.daySecondBtnContainer}>
        <Text style={customTextStyles.startSecondLeftText(isDarkTheme)}>
          Updated Reports Generated by ProVisit
        </Text>
      </View>
      <View style={styles.cardView}>
        <View style={styles.internalCard}>
          <ReportCard
            title={'My Reports'}
            description={'My personal reports here'}
            svg={<UserSvg />}
            onPress={() => navigation.navigate('MyReportScreen')}
          />
        </View>
        <View style={styles.internalCard}>
          <ReportCard
            title={'Employee Reports'}
            description={'All employee details report'}
            svg={<EmployeeSvg />}
            onPress={() => navigation.navigate('EmployeeReportScreen')}
          />
        </View>
        <View style={styles.internalCard}>
          <ReportCard
            title={'Reports Summary'}
            description={'Task & Visit’s daily or monthly report'}
            svg={<CalenderBlankSvg />}
            onPress={() => navigation.navigate('ReportSummaryScreen')}
          />
        </View>
        <View style={styles.internalCard}>
          <ReportCard
            title={'Attendance Report'}
            description={'Task & Visit’s daily or monthly report'}
            svg={<CalenderCheckSvg />}
            onPress={() => navigation.navigate('AttendanceReportScreen')}
          />
        </View>
        <View style={styles.internalCard}>
          <ReportCard
            title={'Task Reports'}
            description={'All kind of daily or monthly task report'}
            svg={<CheckSquareSvg />}
          />
        </View>
        <View style={styles.internalCard}>
          <ReportCard
            title={'Visit Reports'}
            description={'All kind of visit daily or monthly report'}
            svg={<BriefcaseSvg />}
          />
        </View>
      </View>
    </ScreenWrapper>
  );
}

const styles = StyleSheet.create({
  dayStartBtnContainer: {
    ...commonStyles.rowSpaceBetween,
    paddingHorizontal: 20,
    marginVertical: 5,
  },
  daySecondBtnContainer: {
    ...commonStyles.rowStart,
    paddingHorizontal: 20,
    marginVertical: 0,
  },
  cardView: {
    paddingVertical: 30,
    paddingHorizontal: 15,
  },
  internalCard: {
    paddingVertical: 5,
  },
});

const customTextStyles = {
  startLeftText: (isDarkTheme: boolean): StyleProp<TextStyle> => ({
    color: isDarkTheme ? colors.dark.white : colors.light.dark,
    fontFamily: typography.manropeBold800,
    fontSize: 24,
    lineHeight: 33.6,
    width: responsiveWidth(35),
  }),
  startSecondLeftText: (isDarkTheme: boolean): StyleProp<TextStyle> => ({
    color: isDarkTheme ? colors.dark.white : colors.light.dark,
    fontFamily: typography.manropeRegular400,
    fontSize: 13,
    lineHeight: 19.5,
    width: responsiveWidth(60),
  }),
};
